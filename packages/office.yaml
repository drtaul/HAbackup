
input_boolean:
  office_light_auto_on:
    name: Office Light turned on by motion
    initial: off

switch:
  - platform: mqtt
    name: "Office Light"
    state_topic: "stat/shelly-office-light/RESULT"
    value_template: "{{ value_json.POWER }}"
    command_topic: "cmnd/shelly-office-light/POWER"
    availability_topic: "tele/shelly-office-light/LWT"
    payload_available: "Online"
    payload_not_available: "Offline"
    qos: 1
    payload_on: "ON"
    payload_off: "OFF"
    icon: mdi:lamp
  - platform: mqtt
    name: "Office Desk Light"
    state_topic: "stat/office-desk-light/RESULT"
    value_template: "{{ value_json.POWER }}"
    command_topic: "cmnd/office-desk-light/POWER"
    availability_topic: "tele/office-desk-light/LWT"
    qos: 1
    payload_on: "ON"
    payload_off: "OFF"
    payload_available: "Online"
    payload_not_available: "Offline"
    retain: false
    icon: mdi:desk-lamp

automation:
  - alias: handle office motion detected
    trigger:
      platform: state
      entity_id: binary_sensor.office_motion
      to: 'on'
    condition:
      - condition: state
        entity_id: sun.sun
        state: 'below_horizon'
      - condition: state
        entity_id: switch.office_light
        state: 'off'
    action:
      - service: switch.turn_on
        target:
          entity_id: switch.office_light
      - service: input_boolean.turn_on
        target:
          entity_id: input_boolean.office_light_auto_on
  - alias: handle office motion cleared
    trigger:
      platform: state
      entity_id: binary_sensor.office_motion
      to: 'off'
      for:
        minutes: 15
    condition:
      - condition: state
        entity_id: input_boolean.office_light_auto_on
        state: 'on'
      - condition: state
        entity_id: switch.office_light
        state: 'on'
    action:
      - service: switch.turn_off
        target:
          entity_id: switch.office_light
  # turn off boolean auto flag whenever the light switch is off
  # this effectively provides a manual override if you immediately
  # turn the switch back on or reach in before you walk in to turn
  # the light on (when it is dark)
  - alias: handle office light switch off
    trigger:
      platform: state
      entity_id: switch.office_light
      to: 'off'
    condition:
      - condition: state
        entity_id: input_boolean.office_light_auto_on
        state: 'on'
    action:
      - service: input_boolean.turn_off
        target:
          entity_id: input_boolean.office_light_auto_on
  - alias: follow office light switch
    trigger:
      platform: state
      entity_id: switch.office_light
    condition:
      - condition: template
        value_template: '{{ trigger.from_state.state != "unavailable" }}'
      - condition: template
        value_template: '{{ trigger.to_state.state != "unavailable" }}'
      - condition: template
        value_template: '{{ trigger.from_state.state != trigger.to_state.state }}'
    action:
      service_template: >-
        {% if trigger.to_state.state == 'off' %}
          switch.turn_off
        {% else %}
          switch.turn_on
        {% endif %}
      target:
        entity_id: switch.office_desk_light
        
# careful with attempt to override, given switch state is affected by
# other automations
#  - alias: handle office switch override
#    trigger:
#      platform: state
#      entity_id: switch.office_light
#      to: 'on'
          
