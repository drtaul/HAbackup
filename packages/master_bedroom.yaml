input_select:
  mst_bedrm_fan:
    name: master bedroom fan speeds
    options:
      - 'off'
      - turtle
      - low
      - medium
      - high
    initial: 'off'

switch:
  - platform: mqtt
    name: Master Bedroom Ceiling Lights
    state_topic: "shellies/shelly-mstrbedrm/relay/0"
    command_topic: "shellies/shelly-mstrbedrm/relay/0/command"
    payload_on: "on"
    payload_off: "off"
    icon: mdi:lamp
    qos: 1
    retain: false

fan:
  - platform: mqtt
    name: "Master Bedroom Fan"
    qos: 1
    state_topic: "stat/tl_fanlight_sw1_DC747A/POWER1"
    command_topic: "cmnd/tl_fanlight_sw1_DC747A/POWER1"
    availability_topic: "tele/tl_fanlight_sw1_DC747A/LWT"
    percentage_state_topic: "stat/tl_fanlight_sw1_DC747A/speed"
    percentage_value_template: '{{ ((value | replace("3,","")) | int + 1) * 25 }}'
    percentage_command_topic: "cmnd/tl_fanlight_sw1_DC747A/tuyasend4"
    percentage_command_template: "3,{{ ((value | int - 1) / 25) | int }}"
    preset_mode_state_topic: "stat/tl_fanlight_sw1_DC747A/speed"
    preset_mode_value_template: '{{ value | replace("3,0", "turtle") | replace("3,1", "low") | replace("3,2", "medium") | replace("3,3", "high") }}'
    preset_mode_command_topic: "cmnd/tl_fanlight_sw1_DC747A/tuyasend4"
    preset_mode_command_template: '{{ value | replace("turtle", "3,0") | replace("low", "3,1") | replace("medium", "3,2") | replace("high", "3,3") }}'
    preset_modes:
      - "turtle"
      - "low"
      - "medium"
      - "high"
    payload_available: "Online"
    payload_not_available: "Offline"
    payload_on: "ON"
    payload_off: "OFF"


light:
  - platform: mqtt
    name: "Master Bedroom Fan Light"
    state_topic: "stat/tl_fanlight_sw1_DC747A/POWER2"
    command_topic: "cmnd/tl_fanlight_sw1_DC747A/POWER2"
    availability_topic: "tele/tl_fanlight_sw1_DC747A/LWT"
    brightness_state_topic: "tele/tl_fanlight_sw1_DC747A/STATE"
    brightness_command_topic: "cmnd/tl_fanlight_sw1_DC747A/Dimmer"
    brightness_scale: 100
    brightness_value_template: "{{ value_json.Dimmer }}"
    payload_on: "ON"
    payload_off: "OFF"
    payload_available: "Online"
    payload_not_available: "Offline"

binary_sensor:
  - platform: mqtt
    name: "Master Bedroom Wall Switch"
    state_topic: "tele/tl_fanlight_sw1_DC747A/SENSOR"
    value_template: "{{ value_json.Switch1 }}"
    availability_topic: "tele/tl_fanlight_sw1_DC747A/LWT"
    payload_on: "ON"
    payload_off: "OFF"
    payload_available: "Online"
    payload_not_available: "Offline"


automation:
  - alias: "Master Bedrm WallSwitch"
    mode: single
    trigger:
      - platform: state
        entity_id: binary_sensor.master_bedroom_wall_switch
    condition:
      ##################
      # these are necessary due to random wifi interruption
      # resulting in transition through unknown state
      condition: and
      conditions:
        - condition: or
          conditions:
            - condition: state
              entity_id: binary_sensor.master_bedroom_wall_switch
              state: "on"
            - condition: state
              entity_id: binary_sensor.master_bedroom_wall_switch
              state: "off"
        - condition: template
          value_template: '{{ trigger.from_state.state != "unavailable" }}'
        - condition: template
          value_template: '{{ trigger.to_state.state != "unavailable" }}'
        - condition: template
          value_template: '{{ trigger.from_state.state != trigger.to_state.state }}'
        - condition: numeric_state
          entity_id: sensor.uptime_minutes
          above: 3
    action:
      - service: switch.toggle
        entity_id: switch.sonoff_1000a39d06
      - service: switch.toggle
        entity_id: switch.lk_zbt_onoffplug_d0001_e6bbd3fe_on_off
      - service: system_log.write
        data_template:
          message: "mstbedrm lamp toggle triggered by switch going from state {{trigger.from_state.state}} to {{trigger.to_state.state}}"
          level: warning
      - delay: 1
  - id: master_bedrm_fan_speed
    alias: set master bedroom fan speed
    trigger:
      platform: state
      entity_id: input_select.mst_bedrm_fan
    action:
      service_template: >
        {% if trigger.to_state.state == 'off' %}
          script.fan_off
        {% else %}
          script.fan_on
        {% endif %}
      data_template:
         entity: fan.master_bedroom_fan
         speed: "{{ trigger.to_state.state }}"

